--Basic
--Retrieve the total number of orders placed.
SELECT
	COUNT(ORDER_DETAILS_ID) AS TOTAL
FROM
	ORDER_DETAILS;

--Calculate the total revenue generated from pizza sales.
SELECT
	SUM(OD.QUANTITY * P.PRICE) AS TOTAL_REVENUE
FROM
	ORDER_DETAILS AS OD
	JOIN PIZZAS AS P ON OD.PIZZA_ID = P.PIZZA_ID;

--Identify the highest-priced pizza.
SELECT
	PT.NAME,
	P.PRICE
FROM
	PIZZAS AS P
	JOIN PIZZA_TYPES AS PT ON P.PIZZA_TYPE = PT.PIZZA_TYPE
ORDER BY
	P.PRICE DESC LIMIT
	1;

--Identify the most common pizza size ordered.
SELECT
	SIZE,
	COUNT(ORDER_DETAILS_ID) AS TOTAL
FROM
	PIZZAS AS P
	JOIN ORDER_DETAILS AS OD ON P.PIZZA_ID = OD.PIZZA_ID
GROUP BY
	P.SIZE
ORDER BY
	TOTAL DESC LIMIT
	1;

--List the top 5 most ordered pizza types along with their quantities.
SELECT
	PT.PIZZA_TYPE,
	SUM(OD.QUANTITY) AS QUANTITY
FROM
	PIZZA_TYPES AS PT
	JOIN PIZZAS AS P ON PT.PIZZA_TYPE = P.PIZZA_TYPE
	JOIN ORDER_DETAILS AS OD ON OD.PIZZA_ID = P.PIZZA_ID
GROUP BY
	PT.PIZZA_TYPE
ORDER BY
	TOTAL DESC LIMIT
	5;

--INTERMEDIATE
--Join the necessary tables to find the total quantity of each pizza category ordered.
SELECT
	PT.CATEGORY,
	SUM(OD.QUANTITY) AS TOTAL_QUANTITY
FROM
	PIZZA_TYPES AS PT
	JOIN PIZZAS AS P ON PT.PIZZA_TYPE = P.PIZZA_TYPE
	JOIN ORDER_DETAILS AS OD ON OD.PIZZA_ID = P.PIZZA_ID
GROUP BY
	PT.CATEGORY
ORDER BY
	TOTAL_QUANTITY ASC;


--Join relevant tables to find the category-wise distribution of pizzas.
SELECT
	CATEGORY,
	COUNT(NAME)
FROM
	PIZZA_TYPES
GROUP BY
	CATEGORY;


--Group the orders by date and calculate the average number of pizzas ordered per day.
WITH
	MY_CTE AS (
		SELECT
			SUM(ORDER_DETAILS.QUANTITY) AS QUANTITY,
			ORDERS.ORDER_DATE
		FROM
			ORDER_DETAILS
			JOIN ORDERS ON ORDER_DETAILS.ORDER_ID = ORDERS.ORDER_ID
		GROUP BY
			ORDERS.ORDER_DATE
	)
SELECT
	ROUND(AVG(QUANTITY), 0) AS AVERAGE_NUMBER_OF_PIZZAS
FROM
	MY_CTE;

--Determine the top 3 most ordered pizza types based on revenue.
SELECT
	PIZZAS.PIZZA_TYPE,
	SUM(PIZZAS.PRICE * ORDER_DETAILS.QUANTITY) AS REVENUE
FROM
	PIZZAS
	JOIN ORDER_DETAILS ON PIZZAS.PIZZA_ID = ORDER_DETAILS.PIZZA_ID
GROUP BY
	PIZZAS.PIZZA_TYPE
ORDER BY
	REVENUE DESCLIMIT
	3;

--Advanced
--Calculate the percentage contribution of each pizza type to total revenue.
SELECT
	PT.CATEGORY,
	(
		ROUND(
			(SUM(PIZZAS.PRICE * ORDER_DETAILS.QUANTITY)) / (
				(
					SELECT
						SUM(P.PRICE * OD.QUANTITY) AS TOTAL_REVENUE
					FROM
						PIZZAS AS P
						JOIN ORDER_DETAILS AS OD ON P.PIZZA_ID = OD.PIZZA_ID
				)
			) * 100,
			2
		)
	) AS PERCENTAGE
FROM
	PIZZAS
	JOIN ORDER_DETAILS ON PIZZAS.PIZZA_ID = ORDER_DETAILS.PIZZA_ID
	JOIN PIZZA_TYPES AS PT ON PT.PIZZA_TYPE = PIZZAS.PIZZA_TYPE
GROUP BY
	PT.CATEGORY;

--Analyze the cumulative revenue generated over time.
SELECT
	ORDER_DATE,
	SUM(REVENUE) OVER (
		ORDER BY
			ORDER_DATE
	) AS CUM_SUM
FROM
	(
		SELECT
			O.ORDER_DATE,
			SUM(P.PRICE * OD.QUANTITY) AS REVENUE
		FROM
			PIZZAS AS P
			JOIN ORDER_DETAILS AS OD ON P.PIZZA_ID = OD.PIZZA_ID
			JOIN ORDERS AS O ON O.ORDER_ID = OD.ORDER_ID
		GROUP BY
			O.ORDER_DATE
	) AS REVENUE_GENERATED
ORDER BY
	ORDER_DATE;

--Determine the top 3 most ordered pizza types based on revenue for each pizza category.

SELECT
	NAME,
	REVENUE
FROM
	(
		SELECT
			CATEGORY,
			NAME,
			REVENUE,
			RANK() OVER (
				PARTITION BY
					CATEGORY
				ORDER BY
					REVENUE DESC
			) AS RN
		FROM
			(
				SELECT
					PT.CATEGORY,
					PT.NAME,
					SUM(P.PRICE * OD.QUANTITY) AS REVENUE
				FROM
					PIZZAS AS P
					JOIN ORDER_DETAILS AS OD ON P.PIZZA_ID = OD.PIZZA_ID
					JOIN PIZZA_TYPES AS PT ON PT.PIZZA_TYPE = P.PIZZA_TYPE
				GROUP BY
					PT.CATEGORY,
					PT.NAME
			) AS REVENUE_FOR_CATEGORY
	) AS B
WHERE
	RN <= 3;

